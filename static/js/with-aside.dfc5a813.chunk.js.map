{"version":3,"file":"static/js/with-aside.dfc5a813.chunk.js","mappings":"2ZAWMA,EAAgB,CACpBC,MAAO,aACPC,SAAU,cA8GNC,GAAkBC,EAAAA,EAAAA,IAAH,63BAgDrB,EAtJkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAU,mCAAG,WAAOC,GAAP,6FACON,GAASO,EAAAA,EAAAA,IAAMD,IAAOE,SAD7B,qBACTL,EADS,EACTA,OADS,uBAGfM,QAAQC,IACN,0EACAP,GAEFC,EAASD,EAAMQ,SAPA,0BAWXC,GAASC,EAAAA,EAAAA,GAAaf,EAASc,QAC/BE,EAAOF,EAAOE,MAAQ,CAAEC,SAAU,KACxCnB,EAASkB,GAbQ,4CAAH,sDAgBhB,OACE,iBAAKE,UAAWtB,EAAhB,WAGE,UAAC,IAAD,CACEsB,UAAU,cACVC,KAAK,OAELC,OAAK,EAJP,WAME,gBAAKC,IAAI,uDANX,4BASA,UAAC,IAAD,CACEH,UAAU,cACVC,KAAK,OAELC,OAAK,EAJP,WAME,gBAAKC,IAAI,qDANX,0BASA,UAAC,IAAD,CACEH,UAAU,cACVC,KAAK,OAELC,OAAK,EAJP,WAME,gBAAKC,IAAI,qDANX,0BASA,SAAC,IAAD,CAASC,OAAK,EAAd,iBACA,UAAC,IAAD,CACEC,KAAK,QACLC,SAAUjB,EACVW,UAAU,kBACVzB,cAAeA,EACfgC,OAAO,WALT,UAOGpB,IAAS,wBAAKA,KACf,SAAC,SAAD,CACEqB,MAAM,QACNH,KAAK,QACLI,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,sBAHrC,UAKE,SAAC,IAAD,CAAOgB,YAAY,aAErB,SAAC,SAAD,CACEH,MAAM,WACNH,KAAK,WACLI,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,+BAHrC,UAKE,SAAC,IAAD,CAAOM,KAAK,WAAWU,YAAY,gBAErC,UAAC,SAAD,YACE,SAAC,SAAD,CAAWN,KAAK,WAAWO,cAAc,UAAUC,SAAO,EAA1D,UACE,SAAC,IAAD,6BAEF,cAAGb,UAAU,oBAAoBc,KAAK,GAAtC,iCAIF,SAAC,SAAD,WACE,SAAC,IAAD,CACEC,SAAS,SACTb,OAAK,EACLD,KAAK,UACLD,UAAU,eAJZ,sBASF,eAAGA,UAAU,aAAb,mCACuB,SAAC,KAAD,CAAMgB,GAAG,UAAT,2CClD/B,MA1DA,WACE,IAAMC,GAAcC,EAAAA,EAAAA,IAAc,sBAClC,OACE,UAAC,IAAD,YACE,SAAC,KAAD,CAAQC,MAAO,CAAEC,OAAQC,EAAAA,IAAzB,qBACA,SAAC,KAAD,WACE,UAAC,IAAD,CACEF,MAAO,CACLC,OAAO,gBAAD,OAAkBC,EAAAA,GAAlB,KACNC,SAAU,UAHd,WAME,UAAC,IAAD,CACEC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJN,MAAO,CACLC,OAAQ,QALZ,WAQE,SAAC,EAAD,IARF,OAUCH,IACC,UAAC,IAAD,CACES,GAAI,GACJF,GAAI,GACJC,GAAI,GACJN,MAAO,CAAEC,OAAQ,OAAQE,SAAU,QAJrC,WAME,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,+C,qTC2DR5C,GAAkBC,EAAAA,EAAAA,IAAH,08BAoDrB,EA1JkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXI,EAAU,mCAAG,WAAOC,GAAP,yEACLN,GAASO,EAAAA,EAAAA,IAAMD,MAInBM,GAASC,EAAAA,EAAAA,GAAaf,EAASc,QAC/BE,EAAOF,EAAOE,MAAQ,CAAEC,SAAU,KAExCnB,EAASkB,IARM,2CAAH,sDAYhB,OACE,iBAAKE,UAAWtB,EAAhB,WAGE,UAAC,IAAD,CACEsB,UAAU,cACVC,KAAK,OAELC,OAAK,EAJP,WAME,gBAAKC,IAAI,uDANX,4BASA,UAAC,IAAD,CACEH,UAAU,cACVC,KAAK,OAELC,OAAK,EAJP,WAME,gBAAKC,IAAI,qDANX,0BASA,UAAC,IAAD,CACEH,UAAU,cACVC,KAAK,OAELC,OAAK,EAJP,WAME,gBAAKC,IAAI,qDANX,0BASA,SAAC,IAAD,CAASC,OAAK,EAAd,iBACA,UAAC,IAAD,CACEE,SAAUjB,EACVW,UAAU,kBAEVO,OAAO,WAJT,WAME,SAAC,SAAD,CACEC,MAAM,QACNH,KAAK,QACLI,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,sBAHrC,UAKE,SAAC,IAAD,CAAOgB,YAAY,qBAErB,UAAC,SAAD,CACEH,MAAM,YACNH,KAAK,WACLc,MAAO,CAAEQ,aAAc,GACvBlB,MAAO,CAAC,CAAEC,UAAU,IAJtB,WAME,SAAC,SAAD,CACEL,KAAK,YACLI,MAAO,CAAC,CAAEC,UAAU,IACpBS,MAAO,CAAES,QAAS,eAAgBC,MAAO,mBAH3C,UAKE,SAAC,IAAD,CAAOlB,YAAY,kBAErB,SAAC,SAAD,CACEN,KAAK,WACLI,MAAO,CAAC,CAAEC,UAAU,IACpBS,MAAO,CACLS,QAAS,eACTC,MAAO,kBACPC,WAAY,QANhB,UASE,SAAC,IAAD,CAAOnB,YAAY,oBAGvB,SAAC,SAAD,CACEH,MAAM,WACNH,KAAK,WACLI,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,+BAHrC,UAKE,SAAC,IAAD,CAAOM,KAAK,WAAWU,YAAY,gBAErC,SAAC,IAAD,CAAQI,SAAS,SAASb,OAAK,EAACD,KAAK,UAAUD,UAAU,eAAzD,4BCzCR,MAzDA,WACE,OAA0Bd,EAAAA,EAAAA,UAAS,MAAnC,eAAc6C,GAAd,WACMd,GAAcC,EAAAA,EAAAA,IAAc,sBAClC,GAAuCc,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAA5DC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,cAErB,OAAID,IAAgBC,GAAsB,kCAExCA,IACE,UAAC,IAAD,YACE,SAAC,KAAD,CAAQjB,MAAO,CAAEC,OAAQC,EAAAA,IAAzB,qBACA,SAAC,KAAD,WACE,UAAC,IAAD,CACEF,MAAO,CACLC,OAAO,gBAAD,OAAkBC,EAAAA,GAAlB,KACNC,SAAU,UAHd,WAME,UAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGN,MAAO,CAAEC,OAAQ,QAA7C,WACE,SAAC,EAAD,CAAQW,SAAUA,IADpB,OAGCd,IACC,UAAC,IAAD,CACES,GAAI,GACJF,GAAI,GACJC,GAAI,GACJN,MAAO,CAAEC,OAAQ,OAAQE,SAAU,QAJrC,WAME,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,+C,sBCzDT,SAASzB,EAAawC,GAG3B,IAAMC,GADND,GADAA,EAAKE,mBAAmBF,IAChBG,OAAO,IACAC,MAAM,KACfC,EAAM,GACRC,EAAS,GASb,OAPAL,EAAIM,SAAQ,SAACC,EAAGC,GACdH,EAASE,EAAEJ,MAAM,KACa,qBAAnBC,EAAIC,EAAO,MACpBD,EAAIC,EAAO,IAAMA,EAAO,OAIrBD,E,0HCXLK,EAAgC,SAAUC,EAAGC,GAC/C,IAAIC,EAAI,GAER,IAAK,IAAIC,KAAKH,EACRI,OAAOC,UAAUC,eAAeC,KAAKP,EAAGG,IAAMF,EAAEO,QAAQL,GAAK,IAAGD,EAAEC,GAAKH,EAAEG,IAG/E,GAAS,MAALH,GAAqD,oBAAjCI,OAAOK,sBAA2C,KAAIX,EAAI,EAAb,IAAgBK,EAAIC,OAAOK,sBAAsBT,GAAIF,EAAIK,EAAEO,OAAQZ,IAClIG,EAAEO,QAAQL,EAAEL,IAAM,GAAKM,OAAOC,UAAUM,qBAAqBJ,KAAKP,EAAGG,EAAEL,MAAKI,EAAEC,EAAEL,IAAME,EAAEG,EAAEL,KAEhG,OAAOI,GAiDT,IA1Cc,SAAiBU,GAC7B,IAAIC,EAEAC,EAAoB,aAAiB,MACrCC,EAAeD,EAAkBC,aACjCC,EAAYF,EAAkBE,UAE9BC,EAAqBL,EAAMM,UAC3BC,EAAcP,EAAM3D,KACpBA,OAAuB,IAAhBkE,EAAyB,aAAeA,EAC/CC,EAAqBR,EAAMS,YAC3BA,OAAqC,IAAvBD,EAAgC,SAAWA,EACzDE,EAAoBV,EAAMU,kBAC1BtE,EAAY4D,EAAM5D,UAClBuE,EAAWX,EAAMW,SACjBC,EAASZ,EAAMY,OACfpE,EAAQwD,EAAMxD,MACdqE,EAAY1B,EAAOa,EAAO,CAAC,YAAa,OAAQ,cAAe,oBAAqB,YAAa,WAAY,SAAU,UAEvHM,EAAYH,EAAa,UAAWE,GACpCS,EAAoBL,EAAYX,OAAS,EAAI,IAAIiB,OAAON,GAAeA,EACvEO,IAAgBL,EAChBM,EAAsC,SAAhBR,GAA+C,MAArBC,EAChDQ,EAAuC,UAAhBT,GAAgD,MAArBC,EAClDS,EAAc,IAAWb,EAAW,GAAGS,OAAOT,EAAW,KAAKS,OAAO1E,IAAQ4D,EAAc,IAAI,OAAgBA,EAAa,GAAGc,OAAOT,EAAW,cAAeU,IAAc,OAAgBf,EAAa,GAAGc,OAAOT,EAAW,cAAcS,OAAOD,GAAoBE,IAAc,OAAgBf,EAAa,GAAGc,OAAOT,EAAW,aAAcM,IAAS,OAAgBX,EAAa,GAAGc,OAAOT,EAAW,YAAa9D,IAAQ,OAAgByD,EAAa,GAAGc,OAAOT,EAAW,QAAuB,QAAdF,IAAsB,OAAgBH,EAAa,GAAGc,OAAOT,EAAW,uCAAwCW,IAAsB,OAAgBhB,EAAa,GAAGc,OAAOT,EAAW,wCAAyCY,GAAuBjB,GAAc7D,GAExuBgF,GAAa,QAAS,OAAS,GAAIH,GAAuB,CAC5D/C,WAAYwC,IACVQ,GAAwB,CAC1BG,YAAaX,IAGf,OAAoB,gBAAoB,OAAO,OAAS,CACtDtE,UAAW+E,GACVN,EAAW,CACZS,KAAM,cACJX,GAAyB,gBAAoB,OAAQ,CACvDvE,UAAW,GAAG2E,OAAOT,EAAW,eAChC/C,MAAO6D,GACNT","sources":["modules/auth/signin.component.js","modules/auth/signin.view.js","modules/auth/signup.component.js","modules/auth/signup.view.js","utils/format-search.js","../../../node_modules/antd/es/divider/index.js"],"sourcesContent":["import { useState } from 'react';\nimport { css } from '@emotion/css';\nimport { useDispatch } from 'react-redux';\nimport { Button, Checkbox, Divider, Form, Input } from 'antd';\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\n\nimport { formatSearch } from '@/utils/format-search';\nimport { headerHeight } from '@/constants/default-value';\n\nimport { login } from './auth.slice';\n\nconst initialValues = {\n  email: 'hieunguyen',\n  password: 'hieunguyen',\n  // remember: true\n};\n\nconst sleep = (timer) => {\n  return new Promise((r) => setTimeout(r, timer));\n};\n\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const [error, setError] = useState('');\n\n  const onFinished = async (form) => {\n    const { error } = await dispatch(login(form)).unwrap();\n    if (error) {\n      console.log(\n        '🚀 ~ file: signin.component.js ~ line 31 ~ onFinished ~ error',\n        error\n      );\n      setError(error.message);\n      return;\n    }\n\n    const search = formatSearch(location.search);\n    const from = search.from || { pathname: '/' };\n    navigate(from);\n  };\n\n  return (\n    <div className={loginRightStyle}>\n      {/* <Typography.Title level={3}>Welcome to Vuexy! 👋</Typography.Title>\n      <p>Please sign-in to your account and start the adventure</p> */}\n      <Button\n        className=\"auth-button\"\n        type=\"text\"\n        // icon={}\n        block\n      >\n        <img src=\"https://app.codesignal.com/img/social/facebook.svg\" />\n        Sign in with Facebook\n      </Button>\n      <Button\n        className=\"auth-button\"\n        type=\"text\"\n        // icon={}\n        block\n      >\n        <img src=\"https://app.codesignal.com/img/social/google.svg\" />\n        Sign in with Google\n      </Button>\n      <Button\n        className=\"auth-button\"\n        type=\"text\"\n        // icon={}\n        block\n      >\n        <img src=\"https://app.codesignal.com/img/social/github.svg\" />\n        Sign in with Github\n      </Button>\n      <Divider plain>or</Divider>\n      <Form\n        name=\"basic\"\n        onFinish={onFinished}\n        className=\"login-page-form\"\n        initialValues={initialValues}\n        layout=\"vertical\"\n      >\n        {error && <h5>{error}</h5>}\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[{ required: true, message: 'Email is required' }]}\n        >\n          <Input placeholder=\"email\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[{ required: true, message: 'Password is required！' }]}\n        >\n          <Input type=\"password\" placeholder=\"password\" />\n        </Form.Item>\n        <Form.Item>\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n          <a className=\"login-form-forgot\" href=\"\">\n            Forgot password\n          </a>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            htmlType=\"submit\"\n            block\n            type=\"primary\"\n            className=\"login-button\"\n          >\n            Login\n          </Button>\n        </Form.Item>\n        <p className=\"create-new\">\n          New on our platform? <Link to=\"/signup\"> Create an account </Link>\n        </p>\n      </Form>\n    </div>\n  );\n};\n\nconst loginRightStyle = css`\n  background-color: #fff;\n  height: 100%;\n  overflow: auto;\n  padding: 2rem;\n  & .login-page-form,\n  .login-button {\n    width: 100%;\n  }\n  & .create-new {\n    text-align: center;\n  }\n  & .ant-divider-inner-text {\n    opacity: 0.8;\n  }\n  & .auth-button {\n    background-color: #eff3ff;\n    color: '#2b3b52';\n    font-weight: bold;\n    border-radius: 5px;\n    margin-bottom: 24px;\n    & img {\n      position: absolute;\n      left: 12px;\n      top: 6px;\n    }\n    & span {\n      margin-left: 18px;\n    }\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n  & form {\n    width: 100%;\n    & .ant-form-item {\n      margin-bottom: 12px;\n    }\n  }\n  & .login-form-forgot {\n    float: right;\n  }\n  & .ant-divider-horizontal.ant-divider-with-text::before,\n  .ant-divider-horizontal.ant-divider-with-text::after {\n    top: 0;\n  }\n`;\n\nexport default LoginForm;\n","import { Col, Layout, Row } from 'antd';\nimport { Content, Header } from 'antd/lib/layout/layout';\n\nimport { useMediaQuery } from '@koj-react/hooks';\nimport { headerHeight } from '@/constants/default-value';\n\nimport Login from './signin.component';\n\nfunction LoginContainer() {\n  const isNotMobile = useMediaQuery('(min-width: 768px)');\n  return (\n    <Layout>\n      <Header style={{ height: headerHeight }}>Header</Header>\n      <Content>\n        <Row\n          style={{\n            height: `calc(100vh - ${headerHeight})`,\n            overflow: 'hidden',\n          }}\n        >\n          <Col\n            xs={24}\n            md={10}\n            lg={8}\n            style={{\n              height: '100%',\n            }}\n          >\n            <Login />;\n          </Col>\n          {isNotMobile && (\n            <Col\n              sm={24}\n              md={14}\n              lg={16}\n              style={{ height: '100%', overflow: 'auto' }}\n            >\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n              <p>dsfsdf</p>\n            </Col>\n          )}\n        </Row>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default LoginContainer;\n","import { Button, Checkbox, Divider, Form, Input, Typography } from 'antd';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { login } from './auth.slice';\nimport { formatSearch } from '@/utils/format-search';\nimport { css } from '@emotion/css';\nimport { headerHeight } from '../../constants/default-value';\n\nconst initialValues = {\n  username: 'guest',\n  password: 'guest',\n  // remember: true\n};\n\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const onFinished = async (form) => {\n    const res = dispatch(login(form));\n\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!res) {\n      const search = formatSearch(location.search);\n      const from = search.from || { pathname: '/' };\n\n      navigate(from);\n    }\n  };\n\n  return (\n    <div className={loginRightStyle}>\n      {/* <Typography.Title level={3}>Welcome to Vuexy! 👋</Typography.Title>\n      <p>Please sign-in to your account and start the adventure</p> */}\n      <Button\n        className=\"auth-button\"\n        type=\"text\"\n        // icon={}\n        block\n      >\n        <img src=\"https://app.codesignal.com/img/social/facebook.svg\" />\n        Sign up with Facebook\n      </Button>\n      <Button\n        className=\"auth-button\"\n        type=\"text\"\n        // icon={}\n        block\n      >\n        <img src=\"https://app.codesignal.com/img/social/google.svg\" />\n        Sign up with Google\n      </Button>\n      <Button\n        className=\"auth-button\"\n        type=\"text\"\n        // icon={}\n        block\n      >\n        <img src=\"https://app.codesignal.com/img/social/github.svg\" />\n        Sign up with Github\n      </Button>\n      <Divider plain>or</Divider>\n      <Form\n        onFinish={onFinished}\n        className=\"login-page-form\"\n        // initialValues={initialValues}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[{ required: true, message: 'Email is required' }]}\n        >\n          <Input placeholder=\"abc@gmail.com\" />\n        </Form.Item>\n        <Form.Item\n          label=\"User Name\"\n          name=\"username\"\n          style={{ marginBottom: 0 }}\n          rules={[{ required: true }]}\n        >\n          <Form.Item\n            name=\"firstname\"\n            rules={[{ required: true }]}\n            style={{ display: 'inline-block', width: 'calc(50% - 8px)' }}\n          >\n            <Input placeholder=\"first name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"lastname\"\n            rules={[{ required: true }]}\n            style={{\n              display: 'inline-block',\n              width: 'calc(50% - 8px)',\n              marginLeft: '16px',\n            }}\n          >\n            <Input placeholder=\"last name\" />\n          </Form.Item>\n        </Form.Item>\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[{ required: true, message: 'Password is required！' }]}\n        >\n          <Input type=\"password\" placeholder=\"password\" />\n        </Form.Item>\n        <Button htmlType=\"submit\" block type=\"primary\" className=\"login-button\">\n          Sign Up\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nconst loginRightStyle = css`\n  background-color: #fff;\n  height: 100%;\n  overflow: auto;\n  padding: 2rem;\n  & .login-page-form,\n  .login-button {\n    width: 100%;\n  }\n  & .create-new {\n    text-align: center;\n  }\n  & .ant-divider-inner-text {\n    opacity: 0.8;\n  }\n  & .auth-button {\n    background-color: #eff3ff;\n    color: '#2b3b52';\n    font-weight: bold;\n    border-radius: 5px;\n    margin-bottom: 24px;\n    & img {\n      position: absolute;\n      left: 12px;\n      top: 6px;\n    }\n    & span {\n      margin-left: 18px;\n    }\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n  & form {\n    width: 100%;\n    & .ant-form-item {\n      margin-bottom: 12px;\n    }\n  }\n  & .login-form-forgot {\n    float: right;\n  }\n  & .ant-divider-horizontal.ant-divider-with-text::before,\n  .ant-divider-horizontal.ant-divider-with-text::after {\n    top: 0;\n    border-top-width: 2px;\n  }\n  & .login-button {\n    margin-top: 10px;\n  }\n`;\n\nexport default LoginForm;\n","import { Col, Layout, Row } from 'antd';\nimport { Content, Header } from 'antd/lib/layout/layout';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useBreakpoint, useMediaQuery } from '@koj-react/hooks';\n\n// import OTP from \"./OTP\";\nimport SignUp from './signup.component';\nimport { headerHeight } from '../../constants/default-value';\n\nfunction SignUpView() {\n  const [email, setEmail] = useState(null);\n  const isNotMobile = useMediaQuery('(min-width: 768px)');\n  const { isOtpVerify, isRenderLogin } = useSelector((state) => state.auth);\n\n  if (isOtpVerify && !isRenderLogin) return <p>hello </p>; //return <OTP email={email} />;\n  return (\n    isRenderLogin && (\n      <Layout>\n        <Header style={{ height: headerHeight }}>Header</Header>\n        <Content>\n          <Row\n            style={{\n              height: `calc(100vh - ${headerHeight})`,\n              overflow: 'hidden',\n            }}\n          >\n            <Col xs={24} md={10} lg={8} style={{ height: '100%' }}>\n              <SignUp setEmail={setEmail} />;\n            </Col>\n            {isNotMobile && (\n              <Col\n                sm={24}\n                md={14}\n                lg={16}\n                style={{ height: '100%', overflow: 'auto' }}\n              >\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n                <p>dsfsdf</p>\n              </Col>\n            )}\n          </Row>\n        </Content>\n      </Layout>\n    )\n  );\n}\n\nexport default SignUpView;\n","export function formatSearch(se) {\n  se = decodeURIComponent(se);\n  se = se.substr(1); //从起始索引号提取字符串中指定数目的字符\n  const arr = se.split('&'); //把字符串分割为字符串数组\n  const obj = {};\n  let newarr = [];\n\n  arr.forEach((v, i) => {\n    newarr = v.split('=');\n    if (typeof obj[newarr[0]] === 'undefined') {\n      obj[newarr[0]] = newarr[1];\n    }\n  });\n\n  return obj;\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'horizontal' : _props$type,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n      orientationMargin = props.orientationMargin,\n      className = props.className,\n      children = props.children,\n      dashed = props.dashed,\n      plain = props.plain,\n      restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n  var prefixCls = getPrefixCls('divider', customizePrefixCls);\n  var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n  var hasChildren = !!children;\n  var hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n  var hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n  var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-no-default-orientation-margin-left\"), hasCustomMarginLeft), _defineProperty(_classNames, \"\".concat(prefixCls, \"-no-default-orientation-margin-right\"), hasCustomMarginRight), _classNames), className);\n\n  var innerStyle = _extends(_extends({}, hasCustomMarginLeft && {\n    marginLeft: orientationMargin\n  }), hasCustomMarginRight && {\n    marginRight: orientationMargin\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classString\n  }, restProps, {\n    role: \"separator\"\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner-text\"),\n    style: innerStyle\n  }, children));\n};\n\nexport default Divider;"],"names":["initialValues","email","password","loginRightStyle","css","navigate","useNavigate","location","useLocation","dispatch","useDispatch","useState","error","setError","onFinished","form","login","unwrap","console","log","message","search","formatSearch","from","pathname","className","type","block","src","plain","name","onFinish","layout","label","rules","required","placeholder","valuePropName","noStyle","href","htmlType","to","isNotMobile","useMediaQuery","style","height","headerHeight","overflow","xs","md","lg","sm","marginBottom","display","width","marginLeft","setEmail","useSelector","state","auth","isOtpVerify","isRenderLogin","se","arr","decodeURIComponent","substr","split","obj","newarr","forEach","v","i","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","length","propertyIsEnumerable","props","_classNames","_React$useContext","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","_props$orientation","orientation","orientationMargin","children","dashed","restProps","orientationPrefix","concat","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","classString","innerStyle","marginRight","role"],"sourceRoot":""}