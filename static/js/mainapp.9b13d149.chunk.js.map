{"version":3,"file":"static/js/mainapp.9b13d149.chunk.js","mappings":"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","sources":["assets/locales|lazy|/^/.//.*/.json$/|chunkName: i18n/[request]|groupOptions: {}|namespace object","constants/error-code..js","i18n/lazyimportlocale.js","i18n/i18n.js","services/apollo-client.js","main.app.js","modules/auth/auth.slice.js","modules/user/user.slice.js","services/axios.js","store/root-reducer.js","store/store.js"],"sourcesContent":["var map = {\n\t\"./en/common.json\": [\n\t\t9384,\n\t\t122\n\t],\n\t\"./en/errors.json\": [\n\t\t14917,\n\t\t742\n\t],\n\t\"./en/nono.json\": [\n\t\t7435,\n\t\t903\n\t],\n\t\"./vi/common.json\": [\n\t\t14465,\n\t\t874\n\t],\n\t\"./vi/errors.json\": [\n\t\t98092,\n\t\t254\n\t],\n\t\"./vi/nono.json\": [\n\t\t8306,\n\t\t771\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 57949;\nmodule.exports = webpackAsyncContext;","export const NETWORK_ERROR = 'network_error';\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nconst LazyImportPlugin = {\n  type: 'backend',\n  init: function (services, backendOptions, i18nextOptions) {},\n  read: function (language, namespace, callback) {\n    import(\n      /* webpackChunkName: \"i18n/[request]\" */ `../assets/locales/${language}/${namespace}.json`\n    ).then((obj) => {\n      callback(null, obj);\n    });\n  },\n\n  save: function (language, namespace, data) {},\n\n  create: function (languages, namespace, key, fallbackValue) {\n    /* save the missing translation */\n  },\n};\n\nexport default LazyImportPlugin;\n","import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nimport LazyImportPlugin from './lazyimportlocale';\n\ni18n\n  .use(LazyImportPlugin)\n\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n\n  // load translation using http -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-http-backend\n  // .use(Backend)\n\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: false, //avoid twice request call locale\n    debug: process.env.NODE_ENV === 'development',\n    defaultNS: 'common',\n    ns: ['common'],\n    // backend: {\n    //   loadPath: `${process.env.PUBLIC_URL}/assets/locales/{{lng}}/{{ns}}.json`,\n    // },\n    saveMissing: true, // for missing key handler to fire\n    missingKeyHandler: function (lng, ns, key, fallbackValue) {\n      console.log(key);\n    },\n    react: {\n      useSuspense: false,\n    },\n    load: 'languageOnly',\n    // special options for react-i18next\n    // learn more: https://react.i18next.com/components/i18next-instance\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;\n","import {\n  ApolloClient,\n  ApolloLink,\n  fromPromise,\n  HttpLink,\n  InMemoryCache,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { onError } from '@apollo/client/link/error';\nimport axios, { getResponseError } from './axios';\n// import { RestLink } from 'apollo-link-rest';\n\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:3001/api/graphql',\n  credentials: 'include',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  console.log('get token');\n  const accessTokenPayload = localStorage.getItem('x-access-payload');\n  return {\n    headers: {\n      ...headers,\n      'x-access-payload': accessTokenPayload ? `${accessTokenPayload}` : '',\n    },\n  };\n});\n\nlet isRefreshing = false;\nlet pendingRequests = [];\n\nconst resolvePendingRequests = () => {\n  pendingRequests.map((callback) => callback());\n  pendingRequests = [];\n};\n\nconst errorLink = onError(\n  ({ graphQLErrors, networkError, operation, forward }) => {\n    if (graphQLErrors) {\n      for (let err of graphQLErrors) {\n        switch (err.extensions.code) {\n          case 'UNAUTHENTICATED': {\n            let forward$;\n\n            if (!isRefreshing) {\n              isRefreshing = true;\n              forward$ = fromPromise(\n                getNewToken()\n                  .then(({ accessTokenPayload, refreshTokenPayload }) => {\n                    // Store the new tokens for your auth link\n                    localStorage.setItem(\n                      'x-refresh-payload',\n                      refreshTokenPayload\n                    );\n                    localStorage.setItem(\n                      'x-access-payload',\n                      accessTokenPayload\n                    );\n                    resolvePendingRequests();\n                    return accessTokenPayload;\n                  })\n                  .catch((error) => {\n                    pendingRequests = [];\n                    return error;\n                  })\n                  .finally(() => {\n                    isRefreshing = false;\n                  })\n              ).filter((value) => Boolean(value));\n            } else {\n              // Will only emit once the Promise is resolved\n              forward$ = fromPromise(\n                new Promise((resolve) => {\n                  pendingRequests.push(() => resolve());\n                })\n              );\n            }\n\n            return forward$.flatMap((accessTokenPayload) => {\n              const oldHeaders = operation.getContext().headers;\n              operation.setContext({\n                headers: {\n                  ...oldHeaders,\n                  'x-access-payload': accessTokenPayload,\n                },\n              });\n              return forward(operation);\n            });\n          }\n        }\n      }\n    }\n    if (networkError) {\n      console.log(`[Network error]: ${networkError}`);\n      // if you would also like to retry automatically on\n      // network errors, we recommend that you use\n      // apollo-link-retry\n    }\n  }\n);\n\nasync function getNewToken() {\n  const refreshTokenPayload$ = localStorage.getItem('x-refresh-payload');\n  const { accessTokenPayload, refreshTokenPayload } = await axios.get(\n    `${process.env.REACT_APP_PUBLIC_BASE_API_URL}/api/auth/refresh`,\n    {\n      headers: {\n        'Content-Type': 'application/json',\n        'x-refresh-payload': refreshTokenPayload$,\n      },\n    }\n  );\n\n  return { accessTokenPayload, refreshTokenPayload };\n}\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([authLink, errorLink, httpLink]),\n});\n","import { lazy, Suspense } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './i18n/i18n';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport { Spin } from 'antd';\nimport './index.css';\nimport { ApolloProvider } from '@apollo/client';\nimport { client } from './services/apollo-client';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nconst App = lazy(() =>\n  import(/* webpackChunkName: \"App\"  */ './modules/app/app')\n);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate\n      loading={\n        <div className=\"center-screen\">\n          <Spin size=\"large\" />\n        </div>\n      }\n      persistor={persistor}\n    >\n      <ApolloProvider client={client}>\n        <Suspense\n          fallback={\n            <div className=\"center-screen\">\n              <Spin size=\"large\" />\n            </div>\n          }\n        >\n          <App />\n        </Suspense>\n      </ApolloProvider>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nimport { setUser } from '@/modules/user/user.slice';\nimport axios from '@/services/axios';\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    isAuthenticated: false,\n  },\n  reducers: {\n    logoutSuccess: (state) => {\n      state.isAuthenticated = false;\n    },\n    authSuccess: (state) => {\n      state.isAuthenticated = true;\n    },\n  },\n});\n\nexport const login = createAsyncThunk(\n  'login',\n  async ({ email, password }, { dispatch }) => {\n    try {\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_PUBLIC_BASE_API_URL}/api/auth/login`,\n        { email, password }\n      );\n      console.log('🚀 ~ file: auth.slice.js ~ line 29 ~ data', data);\n\n      localStorage.setItem('x-access-payload', data.accessTokenPayload);\n      localStorage.setItem('x-refresh-payload', data.refreshTokenPayload);\n\n      dispatch(\n        setUser({ name: 'hieu', permissions: new Set(data.permissions) })\n      );\n\n      return { data };\n    } catch (error) {\n      return { error };\n    }\n  }\n);\n\n// export const login = createAsyncThunk(\n//   'login',\n//   async ({ email, password }, { dispatch }) => {\n//     try {\n//       const data = await fetch(\n//         `${process.env.REACT_APP_PUBLIC_BASE_API_URL}/api/auth/login`,\n//         {\n//           method: 'POST',\n//           body: JSON.stringify({ email, password }),\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           credentials: 'include',\n//         }\n//       ).then(async (response) => {\n//         if (!response.ok) {\n//           throw await response.json();\n//         }\n//         return response.json();\n//       });\n\n//       localStorage.setItem('x-access-payload', data.accessTokenPayload);\n//       localStorage.setItem('x-refresh-payload', data.refreshTokenPayload);\n\n//       dispatch(\n//         setUser({ name: 'hieu', permissions: new Set(data.permissions) })\n//       );\n\n//       return { data: {isAuthenticated: true} };\n//     } catch (error) {\n//       return { data:  {isAuthenticated: true}, error: {message: error.message} };\n//     }\n//   }\n// );\n\nexport const logout = createAsyncThunk('logout', async (data, { dispatch }) => {\n  dispatch(logoutSuccess());\n  return true;\n});\n\nexport const { logoutSuccess, authSuccess } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    name: null,\n    permissions: null,\n  },\n  reducers: {\n    setUser: (state, action) => {\n      const { name, permissions } = action.payload;\n      state.name = name;\n      state.permissions = permissions;\n    },\n    setPermission: (state, action) => {\n      state.permission = action.payload.permission;\n    },\n  },\n});\n\nexport const { setUser, setPermission } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import {\n  ACCESS_PAYLOAD,\n  BASE_API_PREFIX,\n  BASE_API_URL,\n} from '@/constants/default-value';\nimport { NETWORK_ERROR } from '@/constants/error-code.';\nimport Axios from 'axios';\n\nconst axios = Axios.create({\n  baseURL: BASE_API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true,\n});\n\naxios.interceptors.request.use(\n  (config) => {\n    config.headers[ACCESS_PAYLOAD] = localStorage.getItem(ACCESS_PAYLOAD);\n    // config.withCredentials = true;\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async (error) => {\n    const originalConfig = error.config;\n    const errorResult = getResponseError(error);\n\n    if (\n      error.response?.status === 401 &&\n      originalConfig.url === `${BASE_API_URL}/${BASE_API_PREFIX}/auth/login`\n    ) {\n      return Promise.reject(errorResult);\n    }\n\n    if (error.response?.status === 401 && !originalConfig._retry) {\n      originalConfig._retry = true;\n      try {\n        const { data } = await axios.post('/refresh');\n        localStorage.setItem(ACCESS_PAYLOAD, data.refresh);\n        return axios(originalConfig);\n      } catch (error) {\n        const errorResult = getResponseError(error);\n        return Promise.reject(errorResult);\n      }\n    }\n    return Promise.reject(errorResult);\n  }\n);\n\nexport function getResponseError(error) {\n  if (error.response) {\n    return {\n      ...error.response.data,\n      statusCode: error.response?.status || error.response.data.statusCode,\n    };\n  }\n\n  if (error.message === 'Network Error') {\n    return {\n      statusCode: 500,\n      errorCode: NETWORK_ERROR,\n      message: error.message,\n    };\n  }\n\n  return {\n    statusCode: 555,\n    errorCode: 'unknow_platform_error',\n    message: error.message,\n  };\n}\nexport default axios;\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport authReducer from '../modules/auth/auth.slice';\n\nconst createReducer = (asyncReducers) =>\n  combineReducers({\n    auth: authReducer,\n    ...asyncReducers,\n  });\n\nexport default createReducer;\n","import { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport createReducer from './root-reducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  debug: true,\n};\n\nconst persistedReducer = persistReducer(persistConfig, createReducer());\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools:\n    process.env.NODE_ENV === 'development'\n      ? { serialize: { options: { set: true } } }\n      : false,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\n// if (process.env.NODE_ENV === 'development' && module.hot) {\n//   module.hot.accept('./root-reducer', () => {\n//     store.replaceReducer(createReducer());\n//   });\n// }\n\nstore.asyncReducers = {};\n// const persistor = persistStore(store);\n// store.persistor = persistor;\n\nexport function injectReducer(key, reducer) {\n  if (store.asyncReducers[key]) {\n    return false;\n  }\n  store.asyncReducers[key] = reducer;\n  store.replaceReducer(createReducer(store.asyncReducers));\n  return store;\n}\n\nexport default store;\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","NETWORK_ERROR","type","init","services","backendOptions","i18nextOptions","read","language","namespace","callback","obj","save","data","create","languages","key","fallbackValue","i18n","LazyImportPlugin","use","LanguageDetector","initReactI18next","fallbackLng","debug","process","defaultNS","ns","saveMissing","missingKeyHandler","lng","console","log","react","useSuspense","load","interpolation","escapeValue","httpLink","HttpLink","uri","credentials","authLink","setContext","_","headers","accessTokenPayload","localStorage","getItem","isRefreshing","pendingRequests","errorLink","onError","graphQLErrors","networkError","operation","forward","err","extensions","forward$","fromPromise","push","getNewToken","refreshTokenPayload","setItem","catch","error","finally","filter","value","Boolean","flatMap","oldHeaders","getContext","refreshTokenPayload$","axios","client","ApolloClient","cache","InMemoryCache","link","ApolloLink","App","lazy","persistor","persistStore","store","ReactDOM","loading","className","size","ApolloProvider","Suspense","fallback","document","getElementById","authSlice","createSlice","name","initialState","isAuthenticated","reducers","logoutSuccess","state","authSuccess","login","createAsyncThunk","email","password","dispatch","setUser","permissions","Set","actions","userSlice","action","payload","setPermission","permission","Axios","baseURL","BASE_API_URL","withCredentials","getResponseError","response","statusCode","status","message","errorCode","interceptors","request","config","ACCESS_PAYLOAD","reject","originalConfig","errorResult","url","BASE_API_PREFIX","_retry","post","refresh","asyncReducers","combineReducers","auth","authReducer","persistConfig","storage","persistedReducer","persistReducer","createReducer","configureStore","reducer","devTools","middleware","getDefaultMiddleware","serializableCheck","injectReducer","replaceReducer"],"sourceRoot":""}