{"version":3,"file":"static/js/with-aside.cba088f8.chunk.js","mappings":"yOAMA,MAAMA,EAAgB,CACpBC,SAAU,QACVC,SAAU,SA0DZ,EAtDkB,KAChB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,gBAAKC,UAAU,aAAf,UACE,UAAC,IAAD,CACEC,SAfaC,MAAAA,IAIjB,GAHYJ,GAASK,EAAAA,EAAAA,IAAMC,IAGhB,CACT,MACMC,ECvBL,SAAsBC,GAG3B,MAAMC,GADND,GADAA,EAAKE,mBAAmBF,IAChBG,OAAO,IACAC,MAAM,KACfC,EAAM,GACZ,IAAIC,EAAS,GASb,OAPAL,EAAIM,SAAQ,CAACC,EAAGC,KACdH,EAASE,EAAEJ,MAAM,KACa,qBAAnBC,EAAIC,EAAO,MACpBD,EAAIC,EAAO,IAAMA,EAAO,OAIrBD,EDQYK,CAAapB,EAASqB,QACjBZ,MAAQ,CAAEa,SAAU,KAExCxB,EAASW,KAQPL,UAAU,kBACVT,cAAeA,EAHjB,WAKE,8CACA,SAAC,SAAD,CACE4B,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,+CAFrC,UAIE,SAAC,IAAD,CAAOC,YAAY,0BAErB,SAAC,SAAD,CACEJ,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yCAFrC,UAIE,SAAC,IAAD,CAAOE,KAAK,WAAWD,YAAY,oBAErC,SAAC,SAAD,CAAWJ,KAAK,WAAWM,cAAc,UAAzC,UACE,SAAC,IAAD,0CAEF,SAAC,SAAD,WACE,SAAC,IAAD,CACEC,SAAS,SACTF,KAAK,UACLxB,UAAU,yBAHZ,kCEtCV,QATA,WACE2B,QAAQC,IAAI,UACZ,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,OAC7B,YAAEC,EAAF,cAAeC,IAAkBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAEpE,OAAIJ,IAAgBC,GAAsB,kCACnCA,IAAiB,SAAC,EAAD,CAAOH,SAAUA","sources":["modules/auth/login.component.js","ultils/formatSearch.js","modules/auth/login.container.js"],"sourcesContent":["import { Button, Checkbox, Form, Input } from 'antd';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { login } from './auth.slice';\nimport { formatSearch } from '@/ultils/formatSearch';\n\nconst initialValues = {\n  username: 'guest',\n  password: 'guest',\n  // remember: true\n};\n\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const onFinished = async (form) => {\n    const res = dispatch(login(form));\n\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!res) {\n      const search = formatSearch(location.search);\n      const from = search.from || { pathname: '/' };\n\n      navigate(from);\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <Form\n        onFinish={onFinished}\n        className=\"login-page-form\"\n        initialValues={initialValues}\n      >\n        <h2>REACT ANTD ADMIN</h2>\n        <Form.Item\n          name=\"username\"\n          rules={[{ required: true, message: '请输入用户名！' }]}\n        >\n          <Input placeholder=\"用户名\" />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: '请输入密码！' }]}\n        >\n          <Input type=\"password\" placeholder=\"密码\" />\n        </Form.Item>\n        <Form.Item name=\"remember\" valuePropName=\"checked\">\n          <Checkbox>记住用户</Checkbox>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            htmlType=\"submit\"\n            type=\"primary\"\n            className=\"login-page-form_button\"\n          >\n            登录\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","export function formatSearch(se) {\n  se = decodeURIComponent(se);\n  se = se.substr(1); //从起始索引号提取字符串中指定数目的字符\n  const arr = se.split('&'); //把字符串分割为字符串数组\n  const obj = {};\n  let newarr = [];\n\n  arr.forEach((v, i) => {\n    newarr = v.split('=');\n    if (typeof obj[newarr[0]] === 'undefined') {\n      obj[newarr[0]] = newarr[1];\n    }\n  });\n\n  return obj;\n}\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\n// import OTP from \"./OTP\";\nimport Login from './login.component';\n\nfunction LoginContainer() {\n  console.log('login:');\n  const [email, setEmail] = useState(null);\n  const { isOtpVerify, isRenderLogin } = useSelector((state) => state.auth);\n\n  if (isOtpVerify && !isRenderLogin) return <p>hello </p>; //return <OTP email={email} />;\n  return isRenderLogin && <Login setEmail={setEmail} />;\n}\n\nexport default LoginContainer;\n"],"names":["initialValues","username","password","navigate","useNavigate","location","useLocation","dispatch","useDispatch","className","onFinish","async","login","form","from","se","arr","decodeURIComponent","substr","split","obj","newarr","forEach","v","i","formatSearch","search","pathname","name","rules","required","message","placeholder","type","valuePropName","htmlType","console","log","email","setEmail","useState","isOtpVerify","isRenderLogin","useSelector","state","auth"],"sourceRoot":""}