{"version":3,"file":"static/js/with-tabs.6da4919f.chunk.js","mappings":"8QAaMA,IARYC,EAAAA,EAAAA,IAAH,gGAQC,CACd,CACEC,MAAO,OACPC,IAAK,OACLC,MAAO,IACPC,UAAU,EACVC,OAAQ,SAACC,EAAMC,GACb,OACE,iCACE,SAAC,IAAD,CACEC,IAAG,8FAAyFD,EAAOE,GAAhG,QACHC,MAAO,CAAEC,YAAa,MAEvBJ,EAAOK,UALV,IAKsBL,EAAOM,cAKnC,CACEZ,MAAO,QACPC,IAAK,QACLY,UAAW,QACXX,MAAO,IACPC,UAAU,GAGZ,CACED,MAAO,GACPC,UAAU,EACVH,MAAO,SACPC,IAAK,SACLY,UAAW,SACXC,WAAY,CAAC,OAGf,CACEd,MAAO,OACPC,IAAK,OACLC,MAAO,IACPW,UAAW,QACXT,OAAQ,SAACW,GAAD,OAAW,SAACC,EAAD,CAAMD,MAAOA,MAElC,CACEf,MAAO,QACPC,IAAK,QACLC,MAAO,IACPW,UAAW,QACXT,OAAQ,SAACC,GAAD,OAAU,uBAAIA,MAGxB,CACEL,MAAO,eACPC,IAAK,YACLC,MAAO,IACPW,UAAW,YACXT,OAAQ,SAACC,GAAD,OAAU,uBAAIA,MAGxB,CACEL,MAAO,eACPC,IAAK,YACLC,MAAO,IACPW,UAAW,YACXT,OAAQ,SAACC,GAAD,OAAU,uBAAIA,QA0IpBY,EAAU,CACd,CAAEC,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,WAEtBH,EAAO,SAAC,GAAe,IAAbD,EAAY,EAAZA,MACd,OACE,+BACE,SAAC,IAAD,CACEK,KAAK,WACLX,MAAO,CACLP,MAAO,QAETmB,aAAcN,EAEdE,QAASA,EACTK,SAAU,SAACC,KAGXC,YAAY,iBACZC,YAAY,kBAKdC,EAAe,CAQnBC,iBAAkB,SAACrB,GAAD,MAAa,CAC7BsB,SAA0B,kBAAhBtB,EAAOuB,KAEjBA,KAAMvB,EAAOuB,QAIXC,GAAgBC,EAAAA,EAAAA,IAAH,4LAebC,GAAqBD,EAAAA,EAAAA,IAAH,yJA4DxB,UAnDiB,WACf,IAAME,GAAUC,EAAAA,EAAAA,MACVC,GAAeC,EAAAA,EAAAA,UACnB,kBACEtC,EAAQuC,QAAO,SAACC,EAAeC,GAAkB,IAAD,EAC9C,OAAI,OAACA,QAAD,IAACA,GAAD,UAACA,EAAczB,kBAAf,OAAC,EAA0B0B,SAASP,GAGjCK,EAAgBC,EAAarC,OAAS,IAFpCoC,IAGR,KACL,CAACL,IAEH,GAAiCQ,EAAAA,EAAAA,GAASX,GAAlCY,EAAR,EAAQA,KAER,GAFA,EAAcC,QAAd,EAAuBC,OAEFC,EAAAA,EAAAA,GAAYb,IAA1Bc,GAAP,eACA,OACE,4BACE,SAAC,IAAD,CACEC,QAAS,kBACPD,EAAW,CACTE,UAAW,CACTC,KAAM,CACJC,MAAO,UAAYC,KAAKC,SACxBzC,UAAW,OACXC,SAAU,UACVyC,KAAM,UAGVC,eAAgB,CAAC,CAAEC,MAAOzB,OAXhC,sBAiBA,SAAC,IAAD,CACEJ,cAAY,UACPA,GAEL8B,KAAK,QACL1D,QAASA,EACT2D,OAAQ,SAACnD,GAAD,OAAYA,EAAOE,IAC3BkD,YAAgB,OAAJhB,QAAI,IAAJA,OAAA,EAAAA,EAAMiB,QAAS,GAC3BC,OAAQ,CACNC,EAAG,IACHC,EAAG3B","sources":["modules/user/user-list.view.js"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { Table, Radio, Divider, Avatar, Select, Button } from 'antd';\nimport { css } from '@emotion/react';\nimport { useBreakpoint } from '@koj-react/hooks';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nconst userStyle = css`\n  display: flex;\n  align-items: center;\n  & div>p {\n    margin\n  }\n`;\n\nconst columns = [\n  {\n    title: 'User',\n    key: 'user',\n    width: 150,\n    ellipsis: true,\n    render: (text, record) => {\n      return (\n        <>\n          <Avatar\n            src={`https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${record.id}.png`}\n            style={{ marginRight: 10 }}\n          />\n          {record.firstname} {record.lastname}\n        </>\n      );\n    },\n  },\n  {\n    title: 'Email',\n    key: 'email',\n    dataIndex: 'email',\n    width: 150,\n    ellipsis: true,\n  },\n\n  {\n    width: 80,\n    ellipsis: true,\n    title: 'Status',\n    key: 'status',\n    dataIndex: 'status',\n    responsive: ['sm'],\n    // textWrap: 'word-break',\n  },\n  {\n    title: 'Role',\n    key: 'role',\n    width: 200,\n    dataIndex: 'roles',\n    render: (roles) => <Role roles={roles} />,\n  },\n  {\n    title: 'Group',\n    key: 'group',\n    width: 100,\n    dataIndex: 'group',\n    render: (text) => <a>{text}</a>,\n    // ellipsis: true,\n  },\n  {\n    title: 'Created Date',\n    key: 'createdAt',\n    width: 100,\n    dataIndex: 'createdAt',\n    render: (text) => <a>{text}</a>,\n    // ellipsis: true,\n  },\n  {\n    title: 'Updated Date',\n    key: 'updatedAt',\n    width: 100,\n    dataIndex: 'updatedAt',\n    render: (text) => <a>{text}</a>,\n    // ellipsis: true,\n  },\n];\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    email: 'hello@gmail.comddfdfsfsdf',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    roles: ['admin', 'user'],\n    avatar: function () {\n      return `https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${this.key}.png`;\n    },\n  },\n  {\n    key: '2',\n    name: 'Jim Greendsfsdfsdfssdfsdfddsfsdf',\n    email: 'hello@gmail.com',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    roles: ['admin', 'editor'],\n    avatar: function () {\n      return `https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${this.key}.png`;\n    },\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    email: 'hello@gmail.com',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    roles: ['admin'],\n    avatar: function () {\n      return `https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${this.key}.png`;\n    },\n  },\n  {\n    key: '4',\n    name: 'Disabled User',\n    email: 'hello@gmail.com',\n    age: 99,\n    address: 'Sidney No. 1 Lake Park',\n    roles: ['admin'],\n    avatar: function () {\n      return `https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${this.key}.png`;\n    },\n  },\n  {\n    key: '11',\n    name: 'John Brown',\n    email: 'hello@gmail.com',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    roles: ['admin', 'user'],\n    avatar: function () {\n      return `https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${this.key}.png`;\n    },\n  },\n  {\n    key: '12',\n    name: 'Jim Green',\n    email: 'hello@gmail.com',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    roles: ['admin', 'editor'],\n    avatar: function () {\n      return `https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${this.key}.png`;\n    },\n  },\n  {\n    key: '13',\n    name: 'Joe Black',\n    email: 'hello@gmail.com',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    roles: ['admin'],\n    avatar: function () {\n      return `https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${this.key}.png`;\n    },\n  },\n  {\n    key: '14',\n    name: 'Disabled User',\n    email: 'hello@gmail.com',\n    age: 99,\n    address: 'Sidney No. 1 Lake Park',\n    roles: ['admin'],\n    avatar: function () {\n      return `https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${this.key}.png`;\n    },\n  },\n  {\n    key: '111',\n    name: 'John Brown',\n    email: 'hello@gmail.com',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    roles: ['admin', 'user'],\n    avatar: function () {\n      return `https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${this.key}.png`;\n    },\n  },\n  {\n    key: '112',\n    name: 'Jim Green',\n    email: 'hello@gmail.com',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    roles: ['admin', 'editor'],\n    avatar: function () {\n      return `https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${this.key}.png`;\n    },\n  },\n  {\n    key: '113',\n    name: 'Joe Black',\n    email: 'hello@gmail.com',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    roles: ['admin'],\n    avatar: function () {\n      return `https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${this.key}.png`;\n    },\n  },\n  {\n    key: '114',\n    name: 'Disabled User',\n    email: 'hello@gmail.com',\n    age: 99,\n    address: 'Sidney No. 1 Lake Park',\n    roles: ['admin'],\n    avatar: function () {\n      return `https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/images/avatars/${this.key}.png`;\n    },\n  },\n]; // rowSelection object indicates the need for row selection\nconst options = [\n  { label: 'Admin', value: 'admin' },\n  { label: 'User', value: 'user' },\n  { label: 'Editor', value: 'editor' },\n];\nconst Role = ({ roles }) => {\n  return (\n    <>\n      <Select\n        mode=\"multiple\"\n        style={{\n          width: '100%',\n        }}\n        defaultValue={roles}\n        // defaultValue={options[0].id}\n        options={options}\n        onChange={(newValue) => {\n          // setRole(newValue.id);\n        }}\n        placeholder=\"Select Item...\"\n        maxTagCount=\"responsive\"\n      />\n    </>\n  );\n};\nconst rowSelection = {\n  // onChange: (selectedRowKeys, selectedRows) => {\n  //   console.log(\n  //     `selectedRowKeys: ${selectedRowKeys}`,\n  //     'selectedRows: ',\n  //     selectedRows\n  //   );\n  // },\n  getCheckboxProps: (record) => ({\n    disabled: record.name === 'Disabled User',\n    // Column configuration not to be checked\n    name: record.name,\n  }),\n};\n\nconst userListQuery = gql`\n  query getUserList {\n    users {\n      id\n      email\n      status\n      firstname\n      lastname\n      role\n      createdAt\n      updatedAt\n    }\n  }\n`;\n\nconst addNewUserMutation = gql`\n  mutation addUserlist($user: UserCreateInput!) {\n    user {\n      createUser(data: $user) {\n        id\n      }\n    }\n  }\n`;\nconst UserList = () => {\n  const screens = useBreakpoint();\n  const scrollXValue = useMemo(\n    () =>\n      columns.reduce((previousValue, currentValue) => {\n        if (!currentValue?.responsive?.includes(screens)) {\n          return previousValue;\n        }\n        return previousValue + currentValue.width || 100;\n      }, 0),\n    [screens]\n  );\n  const { data, loading, error } = useQuery(userListQuery);\n\n  const [addNewUser] = useMutation(addNewUserMutation);\n  return (\n    <div>\n      <Button\n        onClick={() =>\n          addNewUser({\n            variables: {\n              user: {\n                email: 'hejehrx' + Math.random(),\n                firstname: 'hieu',\n                lastname: 'nguyen ',\n                role: 'admin',\n              },\n            },\n            refetchQueries: [{ query: userListQuery }],\n          })\n        }\n      >\n        Add new\n      </Button>\n      <Table\n        rowSelection={{\n          ...rowSelection,\n        }}\n        size=\"small\"\n        columns={columns}\n        rowKey={(record) => record.id}\n        dataSource={data?.users || []}\n        scroll={{\n          y: 450,\n          x: scrollXValue,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default UserList;\n"],"names":["columns","css","title","key","width","ellipsis","render","text","record","src","id","style","marginRight","firstname","lastname","dataIndex","responsive","roles","Role","options","label","value","mode","defaultValue","onChange","newValue","placeholder","maxTagCount","rowSelection","getCheckboxProps","disabled","name","userListQuery","gql","addNewUserMutation","screens","useBreakpoint","scrollXValue","useMemo","reduce","previousValue","currentValue","includes","useQuery","data","loading","error","useMutation","addNewUser","onClick","variables","user","email","Math","random","role","refetchQueries","query","size","rowKey","dataSource","users","scroll","y","x"],"sourceRoot":""}